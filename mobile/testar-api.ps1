# Script de Teste da API
# Salve como: testar-api.ps1

Write-Host "üß™ Testando Backend da API..." -ForegroundColor Cyan
Write-Host ""

# 1. Testar se API est√° acess√≠vel
Write-Host "1Ô∏è‚É£ Testando se API responde..." -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "http://localhost:8181/api" -Method Get -ErrorAction Stop
    Write-Host "‚úÖ API est√° respondendo!" -ForegroundColor Green
    Write-Host "Resposta: $response" -ForegroundColor Gray
} catch {
    Write-Host "‚ùå API N√ÉO est√° respondendo!" -ForegroundColor Red
    Write-Host "Erro: $_" -ForegroundColor Red
    Write-Host ""
    Write-Host "üëâ Inicie o backend com: cd backend && docker-compose up -d" -ForegroundColor Yellow
    exit 1
}

Write-Host ""

# 2. Testar cadastro
Write-Host "2Ô∏è‚É£ Testando cadastro de usu√°rio..." -ForegroundColor Yellow

$cadastroBody = @{
    associacao = @{
        cnpj = "12345678000100"
        razao_social = "Teste API"
        nome_fantasia = "Teste"
        url_ata_associacao_pdf = "https://exemplo.com/ata.pdf"
    }
    usuario = @{
        nome_completo = "Usu√°rio de Teste"
        cpf = "12345678900"
        email = "teste.api@email.com"
        senha = "senha123"
        apelido = "Teste"
        data_de_nascimento = "1990-01-01"
    }
} | ConvertTo-Json -Depth 3

try {
    $cadastroResponse = Invoke-RestMethod `
        -Uri "http://localhost:8181/api/sessao/cadastro" `
        -Method Post `
        -Body $cadastroBody `
        -ContentType "application/json" `
        -ErrorAction Stop
    
    Write-Host "‚úÖ Cadastro realizado com sucesso!" -ForegroundColor Green
    Write-Host "Resposta: $($cadastroResponse | ConvertTo-Json -Depth 2)" -ForegroundColor Gray
} catch {
    $statusCode = $_.Exception.Response.StatusCode.value__
    if ($statusCode -eq 409 -or $statusCode -eq 400) {
        Write-Host "‚ö†Ô∏è Usu√°rio j√° existe ou dados inv√°lidos (normal se j√° testou antes)" -ForegroundColor Yellow
    } else {
        Write-Host "‚ùå Erro no cadastro!" -ForegroundColor Red
        Write-Host "Erro: $_" -ForegroundColor Red
    }
}

Write-Host ""

# 3. Testar login
Write-Host "3Ô∏è‚É£ Testando login..." -ForegroundColor Yellow

$loginBody = @{
    email = "teste.api@email.com"
    senha = "senha123"
} | ConvertTo-Json

try {
    $loginResponse = Invoke-RestMethod `
        -Uri "http://localhost:8181/api/sessao/login" `
        -Method Post `
        -Body $loginBody `
        -ContentType "application/json" `
        -ErrorAction Stop
    
    Write-Host "‚úÖ Login realizado com sucesso!" -ForegroundColor Green
    Write-Host ""
    
    # Verificar se tem token
    if ($loginResponse.token) {
        Write-Host "üé´ TOKEN ENCONTRADO:" -ForegroundColor Green
        Write-Host $loginResponse.token -ForegroundColor Cyan
        Write-Host ""
        
        # Verificar se tem usu√°rio
        if ($loginResponse.usuario) {
            Write-Host "üë§ USU√ÅRIO ENCONTRADO NA RESPOSTA:" -ForegroundColor Green
            Write-Host ($loginResponse.usuario | ConvertTo-Json -Depth 2) -ForegroundColor Gray
        } else {
            Write-Host "‚ö†Ô∏è Usu√°rio N√ÉO veio na resposta (normal, app vai buscar depois)" -ForegroundColor Yellow
        }
        
        Write-Host ""
        Write-Host "‚úÖ API EST√Å FUNCIONANDO CORRETAMENTE!" -ForegroundColor Green
        Write-Host ""
        Write-Host "üëâ Agora teste o app mobile:" -ForegroundColor Cyan
        Write-Host "   1. Abra o app" -ForegroundColor White
        Write-Host "   2. Use email: teste.api@email.com" -ForegroundColor White
        Write-Host "   3. Use senha: senha123" -ForegroundColor White
        
    } else {
        Write-Host "‚ùå TOKEN N√ÉO ENCONTRADO NA RESPOSTA!" -ForegroundColor Red
        Write-Host "Resposta completa:" -ForegroundColor Yellow
        Write-Host ($loginResponse | ConvertTo-Json -Depth 2) -ForegroundColor Gray
        Write-Host ""
        Write-Host "üêõ ESTE √â O PROBLEMA!" -ForegroundColor Red
        Write-Host "O backend n√£o est√° retornando o token." -ForegroundColor Red
        Write-Host "Verifique o c√≥digo do backend em:" -ForegroundColor Yellow
        Write-Host "backend/src/Controllers/SessaoController.php" -ForegroundColor White
    }
    
} catch {
    Write-Host "‚ùå Erro no login!" -ForegroundColor Red
    Write-Host "Erro: $_" -ForegroundColor Red
    Write-Host ""
    Write-Host "Poss√≠veis causas:" -ForegroundColor Yellow
    Write-Host "- Usu√°rio n√£o foi cadastrado corretamente" -ForegroundColor White
    Write-Host "- Email ou senha incorretos" -ForegroundColor White
    Write-Host "- Backend n√£o est√° processando login" -ForegroundColor White
}

Write-Host ""
Write-Host "üèÅ Teste finalizado!" -ForegroundColor Cyan
