name: API Tests with Postman

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: hortas_dev_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Wait for MySQL
        run: |
          until mysqladmin ping -h"127.0.0.1" -P3306 -uroot -proot_password --silent; do
            echo 'Waiting for MySQL...'
            sleep 2
          done
          echo "MySQL is ready!"

      - name: Setup database schema
        run: |
          cd backend/src/Utils/SQL
          echo "Running 00_SQL_criar_banco.sql..."
          mysql -h127.0.0.1 -P3306 -uroot -proot_password hortas_dev_db < 00_SQL_criar_banco.sql
          echo "Running 01_SQL_seed_dados_iniciais.sql..."
          mysql -h127.0.0.1 -P3306 -uroot -proot_password hortas_dev_db < 01_SQL_seed_dados_iniciais.sql
          echo "Running 02_SQL_seed_dados_teste.sql..."
          mysql -h127.0.0.1 -P3306 -uroot -proot_password hortas_dev_db < 02_SQL_seed_dados_teste.sql
          echo "Database setup complete!"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pdo, pdo_mysql, mbstring, curl, json

      - name: Install Composer dependencies
        run: |
          cd backend
          composer install --no-interaction --prefer-dist --no-dev

      - name: Create .env file
        run: |
          cd backend
          cat > .env << EOF
          # Environment
          APP_ENV=development
          APP_DEBUG=true

          # Database
          DB_HOST=127.0.0.1
          DB_NAME=hortas_dev_db
          DB_USER=root
          DB_PASS=root_password
          DB_CHARSET=utf8mb4

          # JWT
          JWT_SECRET=hortas_dev_test_secret

          # API
          API_VERSION=v1
          EOF

      - name: Start PHP server
        run: |
          cd backend
          php -S localhost:8000 -t public public/index.php > php-server.log 2>&1 &
          echo $! > php-server.pid
          sleep 5
          # Test if server is running
          curl -f http://localhost:8000 || (cat php-server.log && exit 1)

      - name: Install Newman (Postman CLI)
        run: npm install -g newman newman-reporter-htmlextra

      - name: Create Postman environment file
        run: |
          cat > postman-env.json << EOF
          {
            "name": "CI Environment",
            "values": [
              {
                "key": "BASE_URL",
                "value": "http://localhost:8000/api/",
                "enabled": true
              }
            ]
          }
          EOF

      - name: Run Postman collection
        run: |
          newman run backend/Hortas_Comunitarias_Univille.postman_collection.json \
            --environment postman-env.json \
            --reporters cli,json,htmlextra \
            --reporter-json-export newman-results.json \
            --reporter-htmlextra-export newman-report.html \
            --color on

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: newman-results
          path: |
            newman-results.json
            newman-report.html

      - name: Upload PHP server logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: php-server-logs
          path: backend/php-server.log

      - name: Stop PHP server
        if: always()
        run: |
          if [ -f backend/php-server.pid ]; then
            kill $(cat backend/php-server.pid) || true
          fi
